---
# tasks file for nifi
- include: install.yml

- include: config.yml

#- name: Create nifi scripts and configs
#  template: src="{{ item.src }}" dest="{{ item.dest }}" owner="{{ nifi_user }}" group="{{ nifi_user }}" mode="{{ item.mode | default(0644) }}"
#  with_items:
#    - { src: nifi.sh.j2, dest: "{{ nifi_home }}/bin/nifi.sh", mode: "0755" }
#    - { src: nifi-env.sh.j2, dest: "{{ nifi_home }}/bin/nifi-env.sh", mode: "0755" }
#    - { src: extra-args.properties.j2, dest: "{{ nifi_conf_dir }}/extra-args.properties" }
#  notify:
#    - restart nifi
#  tags: [ config ]
#
#- name: Update nifi configs
#  lineinfile:
#    dest: "{{ nifi_conf_dir }}/nifi.properties"
#    state: present
#    regexp: "^nifi.variable.registry.properties="
#    line: "nifi.variable.registry.properties={{ nifi_conf_dir }}/extra-args.properties"
#  notify:
#    - restart nifi
#  tags: [ config ]

#- name: Update nifi log retention
#  replace:
#    dest: "{{ nifi_conf_dir }}/logback.xml"
#    regexp: '^(\s+)\<maxHistory\>.*$'
#    replace: '\1<maxHistory>{{ nifi_log_retention }}</maxHistory>'
#  notify:
#    - restart nifi
#  tags: [ config, log ]

#- name: Update nifi custom log levels
#  blockinfile:
#    dest: "{{ nifi_conf_dir }}/logback.xml"
#    insertbefore: '^    <root level=.*$'
#    block: '    <logger name="{{ item.name }}" level="{{ item.level }}"/>'
#    marker: '    <!-- {mark} ANSIBLE MANAGED BLOCK {{ item.name }} -->'
#  with_items: "{{ nifi_custom_log_levels }}"
#  notify:
#    - restart nifi
#  tags: [ config, log ]

